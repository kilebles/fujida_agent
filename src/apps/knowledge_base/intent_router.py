from __future__ import annotations

from common.openai_client import ensure_openai_client


ALLOWED = {"FAQ", "Device", "Specs", "Other"}


class IntentRouter:
    async def classify(self, user_message: str) -> str:
        """
        Возвращает intent: 'FAQ', 'Device', 'Specs', 'Other'
        """
        
        prompt = f"""
            Ты точный классификатор вопросов от пользователей о продукции Fujida.

            Категории:
            - FAQ → поддержка, неисправности, обновления, прошивки, гарантия, ремонт, сервис, связь с техподдержкой; вопросы про описание функций/режимов/характеристик/параметровгде/купить/цену/магазины устройств в целом; пояснение значений параметров («что значит угол обзора 170 градусов», «горизонтальный или диагональный», «что такое CPL-фильтр»); абстрактные вопросы без указания модели (про «лучшее», «топовое», «дальнобойное» устройства и т.п.).
            - Device → выбор, сравнение, отличия моделей, запросы на характеристики ПРИ УПОМИНАНИИ МОДЕЛИ.
            - Specs → вопросы и поиск устройств по их характеристикам, параметрам или функциям БЕЗ УПОМИНАНИЯ МОДЕЛИ. 
            Сюда относятся запросы вида «У каких моделей есть ...», «Все устройства с ...», «Какие устройства поддерживают ...».
            - Other → всё, что не относится к продукции Fujida.

            Упоминание модели:
            - УПОМИНАНИЕМ считается полное название модели, сокращение или распространённый алиас/транслитерация.
            - Если модель упомянута — это НЕ Specs.

            Приоритет:
            1) Любые вопросы про неисправности/поддержку/прошивки/сервис → FAQ (ДАЖЕ ЕСЛИ МОДЕЛЬ УПОМЯНУТА).
            2) Абстрактные вопросы БЕЗ УПОМИНАНИЯ МОДЕЛИ про «лучшее/топ/дальнобойное/самое…» → FAQ.
            3) Вопросы про объяснение значения параметров/функций («что значит», «для чего нужен», «горизонтальный или диагональный») → FAQ.
            4) Сравнение/выбор/отличия моделей → Device.
            5) Поиск устройств по признаку («у каких моделей есть ...») → Specs.
            6) Остальное → Other.

            Примеры:
            - "Модель zoom okko, на экране отображаются знаки ограничения скорости" → FAQ
            - "Как обновить прошивку на pro max?" → FAQ
            - "Почему не включается fujida?" → FAQ
            - "Что такое режим СМАРТ?" → FAQ
            - "Как работает фильтр скорости?" → FAQ
            - "Подробное описание функций всех устройств" → FAQ
            - "Какое устройство комбо самое лучшее?" → FAQ
            - "Устройство с самой лучшей камерой" → FAQ
            - "самый лучший регистратор" → FAQ
            - "Где купить Fujida?" → FAQ
            - "Дай ссылку на озон где купить ваше комба" → FAQ
            - "Сколько стоит про макс?" → FAQ
            - "Цена zoom okko" → FAQ
            - "Какая модель лучше, про с или про макс?" → Device
            - "сравни карму про и про макс" → Device
            - "Подскажите характеристики karma one" → Device
            - "Есть ли WiFi в karma bliss?" → Device
            - "zoom hit max или smart se — что лучше?" → Device
            - "У каких моделей есть вайфай?" → Specs
            - "Все устройства с GPS" → Specs
            - "У каких моделей есть CPL-фильтр?" → Specs
            - "Какие устройства поддерживают карту памяти 128 ГБ?" → Specs
            - "У каких моделей экран больше 3 дюймов?" → Specs
            - "Где купить машину?" → Other
            - "Спасибо большое!" → Other
            
            - "про макс", "pro s", "блис макс дуо", "Fujida Zoom Blik S Duo WiFi", "карма уан", "karma blik", "окко", "хит макс", "смарт се", "блик эс", "магна", "эра", "глобал", "карма про" — СЧИТАЮТСЯ УПОМИНАНИЕМ МОДЕЛИ.

            Вопрос: "{user_message}"
            Ответ: только одно слово: FAQ, Device, Specs или Other.
            """.strip()

        client = await ensure_openai_client()
        resp = await client.responses.create(
            model="gpt-4.1-mini",
            input=[{"role": "user", "content": prompt}],
            temperature=0,
            max_output_tokens=32,
        )

        raw = (resp.output_text or "").strip()
        upper = raw.upper()
        if "FAQ" in upper:
            return "FAQ"
        if "DEVICE" in upper:
            return "Device"
        if "SPECS" in upper:
            return "Specs"
        if "OTHER" in upper:
            return "Other"

        cleaned = raw.strip().title()
        if cleaned in ALLOWED:
            return cleaned

        return "Other"