from aiogram import Router, F
from aiogram.types import Message

from apps.telegram_bot.services.voice_service import transcribe_voice
from apps.knowledge_base.services.alias_search import get_alias_search
from db.session import async_session_maker

router = Router()


@router.message(F.text | F.voice)
async def handle_user_message(message: Message):
    """
    –ò—â–µ—Ç —É–ø–æ–º–∏–Ω–∞–Ω–∏—è –º–æ–¥–µ–ª–µ–π —á–µ—Ä–µ–∑ Aho-Corasick –∏ RapidFuzz –∏ –≤—ã–≤–æ–¥–∏—Ç –Ω–∞–π–¥–µ–Ω–Ω—ã–µ –Ω–∞–∑–≤–∞–Ω–∏—è.
    """
    if message.text:
        prompt = message.text
    elif message.voice:
        prompt = await transcribe_voice(message)
    else:
        return

    placeholder = await message.answer("üìù")

    try:
        async with async_session_maker() as session:
            service = await get_alias_search(session)
            models = service.find_models(prompt, top_k=10)

        if models:
            reply = "–ù–∞–π–¥–µ–Ω–æ:\n" + "\n".join(f"‚Ä¢ {m}" for m in models)
        else:
            reply = "–ù–∏—á–µ–≥–æ –Ω–µ –Ω–∞—à–ª–æ—Å—å"

        await placeholder.edit_text(reply)
    except Exception:
        await placeholder.edit_text("‚ö†Ô∏è –ß—Ç–æ‚Äë—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫. –ü–æ–ø—Ä–æ–±—É–π –µ—â—ë —Ä–∞–∑.")
